import 'package:flutter/material.dart';
import 'package:geocoding/geocoding.dart';

class LocationProvider with ChangeNotifier {
  Position? _currentPosition;
  String? _currentCity;
  String? _currentCountry;

  Position? get currentPosition => _currentPosition;
  String? get currentCity => _currentCity;
  String? get currentCountry => _currentCountry;

  Future<void> getCurrentLocation() async {
    try {
      // Vérifier si les services de localisation sont activés
      bool serviceEnabled = await Geolocator.isLocationServiceEnabled();
      if (!serviceEnabled) {
        throw Exception('Les services de localisation sont désactivés.');
      }

      // Obtenir la position actuelle
      _currentPosition = await Geolocator.getCurrentPosition(
        desiredAccuracy: LocationAccuracy.high,
      );

      // Convertir les coordonnées en adresse
      List<Placemark> placemarks = await placemarkFromCoordinates(
        _currentPosition!.latitude,
        _currentPosition!.longitude,
      );

      if (placemarks.isNotEmpty) {
        Placemark place = placemarks[0];
        _currentCity = place.locality ?? place.subAdministrativeArea ?? 'Inconnu';
        _currentCountry = place.country;
      }

      notifyListeners();
    } catch (e) {
      debugPrint('Erreur de localisation: $e');
      rethrow;
    }
  }

  Future<void> updateLocation(Position position) async {
    _currentPosition = position;
    await getCurrentLocation();
  }
}