import 'package:flutter/material.dart';
import 'package:mkadia/views/location/LocationService';
import 'package:provider/provider.dart';

class LocationProvider extends ChangeNotifier {
  String? _city;
  String? _capital;
  double? _latitude;
  double? _longitude;
  bool _isLoading = false;
  String? _error;

  String? get city => _city;
  String? get capital => _capital;
  double? get latitude => _latitude;
  double? get longitude => _longitude;
  bool get isLoading => _isLoading;
  String? get error => _error;
  bool get hasLocation => _city != null && _capital != null;

  Future<bool> requestLocation() async {
    _isLoading = true;
    _error = null;
    notifyListeners();

    try {
      final position = await LocationService.getCurrentPosition();
      if (position == null) {
        _error = 'Impossible d\'obtenir la position actuelle';
        _isLoading = false;
        notifyListeners();
        return false;
      }

      final locationData = await LocationService.getLocationDetails(
        position.latitude,
        position.longitude,
      );

      _city = locationData.city;
      _capital = locationData.capital;
      _latitude = locationData.latitude;
      _longitude = locationData.longitude;
      _isLoading = false;
      notifyListeners();
      return true;
    } catch (e) {
      _error = 'Erreur: $e';
      _isLoading = false;
      notifyListeners();
      return false;
    }
  }

  void setManualLocation(String city, String capital, double lat, double lng) {
    _city = city;
    _capital = capital;
    _latitude = lat;
    _longitude = lng;
    notifyListeners();
  }

  void clearLocation() {
    _city = null;
    _capital = null;
    _latitude = null;
    _longitude = null;
    notifyListeners();
  }

  static LocationProvider of(BuildContext context) {
    return context.read<LocationProvider>();
  }
}